{"version":3,"sources":["Components/Common/Loading.tsx","audio.ts","Components/MainMenu/MainMenu.tsx","index.tsx"],"names":["Loading","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","lib","size","className","React","readAudioStream","res","body","getReader","read","then","result","audio","Audio","playAudioStream","blob","Blob","type","url","window","URL","createObjectURL","src","play","Title","Typography","Text","SERVER_ADDRESS","concat","process","REACT_APP_SERVER_PORT","console","log","MainMenu","props","_this","call","refSoumah","bgAudio","handleServerError","e","error","setState","serverState","first","onAnyClick","avatars","scale","connect","state","applicationState","undefined","unsupportedLanguageCodes","_this2","fetch","mode","r","text","response","getApplicationState","catch","_this3","json","sortUnsupportedTextToSpeech","_this4","unsupportedLanguages","map","obj","languageCode","local","language","Code","tStart","performance","now","animate","objects","document","getElementsByClassName","i","length","soumah","attr_index","getAttribute","attr_scale","t","rotateZ","Math","sin","skewY","translateX","translateY","abs","transform","style","requestAnimationFrame","_this5","onClick","avatar","index","i2","assign","Loading_Loading","renderServerOnline","renderApplicationState","_this6","inputLanguage","input","results","isResultSupported","includes","sortedResults","filter","level","Name","SoundOutlined","playResultSound","translation","App","MainMenu_MainMenu","rootElement","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.9af4a52a.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Spin } from \"antd/lib\"\r\n\r\ninterface Props {}\r\ninterface State {}\r\nexport class Loading extends React.Component<Props, State> {\r\n    render() {\r\n        return <Spin\r\n            size=\"large\"\r\n            className=\"absoluteCenter\"\r\n        />\r\n    }\r\n}\r\n","\r\n// https://medium.com/@bitshadow/play-audio-via-react-fetch-post-request-92a901d0bb7f\r\n\r\nexport const readAudioStream = ( res: Response ) => {\r\n    const reader = res.body!.getReader()\r\n    return reader\r\n        .read()\r\n        .then((result) => {\r\n            return result;\r\n        });\r\n}\r\n\r\nexport const audio = new Audio()\r\nexport const playAudioStream = ( res: ReadableStreamReadResult<Uint8Array> ) => {\r\n    const blob = new Blob([res.value!], { type: 'audio/mp3' });\r\n    const url = window.URL.createObjectURL(blob)\r\n    audio.src = url;\r\n    audio.play();\r\n}\r\n","import * as React from \"react\";\r\nimport { Button, Layout, Typography, Icon, Input, Affix, Tag } from \"antd/lib\"\r\nconst { Title, Text } = Typography\r\nimport { Loading } from '../Common/Loading'\r\nimport { ApplicationState, Result } from \"../../interfaces\";\r\nimport { Flag } from '../Common/Flag'\r\nimport { playAudioStream, readAudioStream, audio } from \"../../audio\";\r\nimport { SoundOutlined } from '@ant-design/icons'\r\n\r\nconst SERVER_ADDRESS = `${process.env.REACT_APP_SERVER_IP}:${process.env.REACT_APP_SERVER_PORT ? process.env.REACT_APP_SERVER_PORT : ''}`\r\nconsole.log( SERVER_ADDRESS )\r\n\r\ninterface Props {}\r\ninterface State {\r\n    serverState: 'loading' | 'offline' | 'online',\r\n    applicationState: undefined | ApplicationState,\r\n    unsupportedLanguageCodes: undefined | string[]\r\n}\r\nexport class MainMenu extends React.Component<Props, State> {\r\n    refSoumah: React.RefObject<HTMLImageElement>\r\n    bgAudio: HTMLAudioElement = new Audio('tamouya_gouli.mp3')\r\n    constructor( props: Props ) {\r\n        super( props )\r\n        this.connect()\r\n        this.refSoumah = React.createRef()\r\n        this.bgAudio.play()\r\n        this.state = {\r\n            serverState: 'loading',\r\n            applicationState: undefined,\r\n            unsupportedLanguageCodes: undefined\r\n        }\r\n    }\r\n    handleServerError = ( e: Error ) => {\r\n        console.error( e )\r\n        console.log( 'Server offline?' )\r\n        this.setState({ serverState: 'offline' })\r\n    }\r\n    connect() {\r\n        // Check if server is running.\r\n        fetch(\r\n            SERVER_ADDRESS + '/u-there',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.text() )\r\n            .then( response => {\r\n                // Check expected response.\r\n                if ( response === 'we here' ) {\r\n                    console.log( 'Server online' )\r\n                    this.setState({ serverState: 'online' })\r\n                    // Get active results if any from server.\r\n                    this.getApplicationState()\r\n                }\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    getApplicationState() {\r\n        fetch(\r\n            SERVER_ADDRESS + '/state',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.json() )\r\n            .then( applicationState => {\r\n                this.setState({ applicationState })\r\n                this.sortUnsupportedTextToSpeech()\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    sortUnsupportedTextToSpeech() {\r\n        fetch(\r\n            SERVER_ADDRESS + '/unsupported-languages-text-to-speech',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.json() )\r\n            .then( ( unsupportedLanguages: { languageCode: string }[] ) => {\r\n                console.log(unsupportedLanguages)\r\n                this.setState({\r\n                    unsupportedLanguageCodes: unsupportedLanguages.map( obj => obj.languageCode )\r\n                })\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    first = true\r\n    onAnyClick = () => {\r\n        // Hack - iPhone restricts playing audio that is not based on user interaction.\r\n        // Audio.play() must be called (once for element) directly in event handler for it to work.\r\n        if (this.first) {\r\n            audio.play()\r\n            this.bgAudio.play()\r\n            this.first = false\r\n        }\r\n    }\r\n    playResultSound( result: Result ) {\r\n        this.onAnyClick()\r\n\r\n        fetch(\r\n            SERVER_ADDRESS + `/text-to-speech?text=${result.local}&languageCode=${result.language.Code}`\r\n        )\r\n            .then( readAudioStream)\r\n            .then( playAudioStream )\r\n            .catch( e => {\r\n                console.error( e )\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        // MLG animations.\r\n        const animate = ( ) => {\r\n            // const soumah = this.refSoumah.current\r\n            const objects = document.getElementsByClassName('soumah')\r\n            // if ( soumah ) {\r\n            for ( let i = 0; i < objects.length; i ++ ) {\r\n                const soumah = objects[i] as any\r\n                const attr_index = soumah.getAttribute('index')\r\n                const attr_scale = soumah.getAttribute('scale')\r\n                const t = 1.0 * ((window.performance.now( ) + attr_index * 1500) - tStart) / 1000\r\n\r\n                let rotateX: number = 0\r\n                let rotateY: number = 0\r\n                let rotateZ: number = -10 + Math.sin( t ) * 5\r\n                let skewX: number = 0\r\n                let skewY: number = Math.sin( t ) * 12\r\n                let scale: number = 1 + Math.sin( t * 2 ) * .15\r\n                let translateX: number = -100 + Math.sin( t ) * 150\r\n                let translateY: number = 40 + Math.abs( Math.sin( t ) ) * 100\r\n\r\n                let transform = ``\r\n                transform += `translateX(${translateX}px) translateY(${translateY}px) `\r\n                transform += `skewX(${skewX}deg) skewY(${skewY}deg) `\r\n                transform += `rotateX(${rotateX}deg) rotateY(${rotateY}deg) rotateZ(${rotateZ}deg) ` \r\n                transform += `scaleX(${scale}) scaleY(${scale}) `\r\n                if ( attr_scale )\r\n                    transform += `scaleX(${attr_scale}) scaleY(${attr_scale}) `\r\n                soumah.style.transform = transform\r\n            }\r\n            requestAnimationFrame( animate )\r\n        }\r\n        const tStart = window.performance.now()\r\n        animate()\r\n    }\r\n    avatars = [\r\n        {\r\n            scale: 1, src: ['momo.png', 'merkit.png', 'baretti.png']\r\n        },\r\n        // { scale: .6, src: [ 'https://img.pngio.com/donald-trump-united-states-republican-party-face-mask-bill-donald-trump-face-png-1846_2496.png' ] }\r\n    ]\r\n    render() {\r\n        const { serverState } = this.state\r\n        return <div className='expand' onClick={() => this.onAnyClick()}>\r\n            <div className='backgroundDiv' onClick={() => this.onAnyClick()}>\r\n                <img\r\n                     onClick={() => this.onAnyClick()}\r\n                    className='background'\r\n                    src='wandelsoumah_bg.png'\r\n                />\r\n                <span className='hint'>If music is not playing, click somewhere</span>\r\n                {this.avatars.map((avatar, i) => {\r\n                    const props = { scale: avatar.scale, index: i }\r\n                    return avatar.src.map((url, i2) => <img\r\n                        key={i+'a'+i2}\r\n                        className='soumah'\r\n                        src={url}\r\n                        {...props}\r\n                        onClick={() => this.onAnyClick()}\r\n                ></img>)\r\n                })}\r\n            </div>\r\n            {serverState === 'loading' ?\r\n                <Loading/> :\r\n                <div className='main'>\r\n                    {serverState === 'offline' ?\r\n                        <Text>Server is offline... more \"aamuja\" some other time</Text> :\r\n                        this.renderServerOnline()\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    renderServerOnline() {\r\n        const { applicationState } = this.state\r\n        return <div>\r\n            { applicationState && this.renderApplicationState( applicationState ) }\r\n        </div>\r\n    }\r\n    renderApplicationState( applicationState: ApplicationState ) {\r\n        const { unsupportedLanguageCodes } = this.state\r\n        const { inputLanguage, input, results } = applicationState\r\n        // Sort rendered results so that unsupported languages are last.\r\n        const isResultSupported = ( result: Result ): boolean =>\r\n            unsupportedLanguageCodes === undefined ||\r\n            ! unsupportedLanguageCodes.includes( result.language.Code )\r\n        const sortedResults = results.filter( isResultSupported )\r\n            .concat( results.filter( result => ! isResultSupported( result ) ) )\r\n\r\n        return <div className='column'>\r\n            <Title level={3}>Official translations for...</Title>\r\n            <div className='row listStart'>\r\n                <Text className='speechAsText'>\"{input}\"</Text>\r\n            </div>\r\n            {sortedResults.map(( result, i ) =>\r\n                <div className='row' key={i}>\r\n                    <Text>{result.language.Name}:</Text>\r\n                    <Text className='speechAsText'>{result.local}</Text>\r\n                    {isResultSupported( result ) && <SoundOutlined onClick={() => this.playResultSound( result )} />}\r\n                    { inputLanguage === result.language &&\r\n                        <Text>({result.translation})</Text>\r\n                    }\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport \"./styles.css\";\nimport { MainMenu } from './Components/MainMenu/MainMenu'\n\ninterface Props {}\ninterface State {}\nclass App extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {}\n    }\n    render() {\n        return <MainMenu/>\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}