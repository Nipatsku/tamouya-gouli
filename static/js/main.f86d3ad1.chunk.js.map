{"version":3,"sources":["Components/Common/Loading.tsx","audio.ts","Components/Lyrics.tsx","Components/MainMenu/MainMenu.tsx","index.tsx"],"names":["Loading","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","lib","size","className","React","readAudioStream","res","body","getReader","read","then","result","audio","Audio","playAudioStream","blob","Blob","type","url","window","URL","createObjectURL","src","play","LyricsComponent","props","_this","call","fetch","lyricsFile","r","json","lyrics","setState","console","log","state","undefined","t","_this2","requestAnimationFrame","setTime","performance","now","tStart","_this$state","react_default","a","createElement","firstShownLine","slice","reverse","find","line","start","lines","indexOf","length","push","map","i","refRecord","records","record","delta","text","style","width","concat","index","Component","Title","Typography","Text","SERVER_ADDRESS","process","REACT_APP_SERVER_PORT","MainMenu","refSoumah","bgAudioStart","bgAudio","handleServerError","e","error","serverState","first","onAnyClick","avatars","scale","connect","addEventListener","applicationState","unsupportedLanguageCodes","mode","response","getApplicationState","catch","_this3","sortUnsupportedTextToSpeech","_this4","unsupportedLanguages","obj","languageCode","local","language","Code","animate","objects","document","getElementsByClassName","soumah","attr_index","getAttribute","attr_scale","rotateZ","Math","sin","skewY","translateX","translateY","abs","transform","_this5","onClick","avatar","i2","assign","Lyrics_LyricsComponent","Loading_Loading","renderServerOnline","renderApplicationState","_this6","inputLanguage","input","results","isResultSupported","includes","sortedResults","filter","level","Name","SoundOutlined","playResultSound","translation","App","MainMenu_MainMenu","rootElement","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.f86d3ad1.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Spin } from \"antd/lib\"\r\n\r\ninterface Props {}\r\ninterface State {}\r\nexport class Loading extends React.Component<Props, State> {\r\n    render() {\r\n        return <Spin\r\n            size=\"large\"\r\n            className=\"absoluteCenter\"\r\n        />\r\n    }\r\n}\r\n","\r\n// https://medium.com/@bitshadow/play-audio-via-react-fetch-post-request-92a901d0bb7f\r\n\r\nexport const readAudioStream = ( res: Response ) => {\r\n    const reader = res.body!.getReader()\r\n    return reader\r\n        .read()\r\n        .then((result) => {\r\n            return result;\r\n        });\r\n}\r\n\r\nexport const audio = new Audio()\r\nexport const playAudioStream = ( res: ReadableStreamReadResult<Uint8Array> ) => {\r\n    const blob = new Blob([res.value!], { type: 'audio/mp3' });\r\n    const url = window.URL.createObjectURL(blob)\r\n    audio.src = url;\r\n    audio.play();\r\n}\r\n","import React from 'react'\r\nimport { Lyrics } from '../Components/LyricsGenerator/LyricsGenerator'\r\n\r\ninterface Props {\r\n    lyricsFile: string\r\n    tStart: number\r\n}\r\ninterface State {\r\n    lyrics?: Lyrics,\r\n    t: number\r\n}\r\nexport class LyricsComponent extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n        fetch(this.props.lyricsFile)\r\n            .then(r => r.json())\r\n            .then((lyrics: Lyrics) => {\r\n                this.setState({ lyrics })\r\n                console.log(lyrics)\r\n            })\r\n        this.state = {\r\n            lyrics: undefined,\r\n            t: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const setTime = () => {\r\n            const t = window.performance.now() - this.props.tStart\r\n            this.setState({ t: t * 2 }) // hardcoded 50% speed !\r\n            requestAnimationFrame( setTime )\r\n        }\r\n        requestAnimationFrame( setTime )\r\n    }\r\n\r\n    render() {\r\n        const { lyrics, t } = this.state\r\n        if ( !lyrics ) {\r\n            return <div></div>\r\n        }\r\n        \r\n        // Find first line to show.\r\n        const firstShownLine = lyrics.slice().reverse().find(line => line.start < t)\r\n        if ( !firstShownLine ) {\r\n            return <div></div>\r\n        }\r\n        const lines = [\r\n            firstShownLine\r\n        ]\r\n        if ( lyrics.indexOf( firstShownLine ) < lyrics.length - 1 ) {\r\n            lines.push( lyrics[lyrics.indexOf( firstShownLine ) + 1] )\r\n        }\r\n        return <div className='lines-div'>\r\n            {lines.map(( line, i ) => {\r\n                const refRecord = line.records.find(record =>\r\n                    record.delta + line.start - 1500 >= t    \r\n                )\r\n                return <div className='lyrics-line-div'>\r\n                    <span className='lyrics-line'>{ line.text }\r\n                        <div className='lyrics-highlight'\r\n                            style={{\r\n                                width: refRecord && line === firstShownLine ?\r\n                                    `${100 * refRecord.index / line.text.length}%` :\r\n                                    '0px'\r\n                            }}\r\n                        ></div>\r\n                    </span>\r\n                </div>\r\n            })}\r\n        </div>\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport { Button, Layout, Typography, Icon, Input, Affix, Tag } from \"antd/lib\"\r\nconst { Title, Text } = Typography\r\nimport { Loading } from '../Common/Loading'\r\nimport { ApplicationState, Result } from \"../../interfaces\";\r\nimport { Flag } from '../Common/Flag'\r\nimport { playAudioStream, readAudioStream, audio } from \"../../audio\";\r\nimport { SoundOutlined } from '@ant-design/icons'\r\nimport { LyricsComponent } from '../Lyrics'\r\n\r\nconst SERVER_ADDRESS = `${process.env.REACT_APP_SERVER_IP}:${process.env.REACT_APP_SERVER_PORT ? process.env.REACT_APP_SERVER_PORT : ''}`\r\nconsole.log( SERVER_ADDRESS )\r\n\r\ninterface Props {}\r\ninterface State {\r\n    serverState: 'loading' | 'offline' | 'online',\r\n    applicationState: undefined | ApplicationState,\r\n    unsupportedLanguageCodes: undefined | string[]\r\n}\r\nexport class MainMenu extends React.Component<Props, State> {\r\n    refSoumah: React.RefObject<HTMLImageElement>\r\n    bgAudioStart?: number\r\n    bgAudio: HTMLAudioElement = new Audio('tamouya_gouli.mp3')\r\n    constructor( props: Props ) {\r\n        super( props )\r\n        this.connect()\r\n        this.refSoumah = React.createRef()\r\n        this.bgAudio.addEventListener( 'play', () => {\r\n            console.log('play')\r\n            this.bgAudioStart = window.performance.now()\r\n        } )\r\n        this.bgAudio.play()\r\n        \r\n        this.state = {\r\n            serverState: 'loading',\r\n            applicationState: undefined,\r\n            unsupportedLanguageCodes: undefined\r\n        }\r\n    }\r\n    handleServerError = ( e: Error ) => {\r\n        console.error( e )\r\n        console.log( 'Server offline?' )\r\n        this.setState({ serverState: 'offline' })\r\n    }\r\n    connect() {\r\n        // Check if server is running.\r\n        fetch(\r\n            SERVER_ADDRESS + '/u-there',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.text() )\r\n            .then( response => {\r\n                // Check expected response.\r\n                if ( response === 'we here' ) {\r\n                    console.log( 'Server online' )\r\n                    this.setState({ serverState: 'online' })\r\n                    // Get active results if any from server.\r\n                    this.getApplicationState()\r\n                }\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    getApplicationState() {\r\n        fetch(\r\n            SERVER_ADDRESS + '/state',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.json() )\r\n            .then( applicationState => {\r\n                this.setState({ applicationState })\r\n                this.sortUnsupportedTextToSpeech()\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    sortUnsupportedTextToSpeech() {\r\n        fetch(\r\n            SERVER_ADDRESS + '/unsupported-languages-text-to-speech',\r\n            { mode: 'cors' }\r\n        )\r\n            .then( r => r.json() )\r\n            .then( ( unsupportedLanguages: { languageCode: string }[] ) => {\r\n                console.log(unsupportedLanguages)\r\n                this.setState({\r\n                    unsupportedLanguageCodes: unsupportedLanguages.map( obj => obj.languageCode )\r\n                })\r\n            } )\r\n            .catch( this.handleServerError )\r\n    }\r\n    first = true\r\n    onAnyClick = () => {\r\n        // Hack - iPhone restricts playing audio that is not based on user interaction.\r\n        // Audio.play() must be called (once for element) directly in event handler for it to work.\r\n        if (this.first) {\r\n            audio.play()\r\n            this.bgAudio.play()\r\n            this.first = false\r\n        }\r\n    }\r\n    playResultSound( result: Result ) {\r\n        this.onAnyClick()\r\n\r\n        fetch(\r\n            SERVER_ADDRESS + `/text-to-speech?text=${result.local}&languageCode=${result.language.Code}`\r\n        )\r\n            .then( readAudioStream)\r\n            .then( playAudioStream )\r\n            .catch( e => {\r\n                console.error( e )\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        // MLG animations.\r\n        const animate = ( ) => {\r\n            // const soumah = this.refSoumah.current\r\n            const objects = document.getElementsByClassName('soumah')\r\n            // if ( soumah ) {\r\n            for ( let i = 0; i < objects.length; i ++ ) {\r\n                const soumah = objects[i] as any\r\n                const attr_index = soumah.getAttribute('index')\r\n                const attr_scale = soumah.getAttribute('scale')\r\n                const t = 2.0 * ((window.performance.now( ) + attr_index * 1500) - tStart) / 1000\r\n\r\n                let rotateX: number = 0\r\n                let rotateY: number = 0\r\n                let rotateZ: number = -10 + Math.sin( t ) * 5\r\n                let skewX: number = 0\r\n                let skewY: number = Math.sin( t ) * 12\r\n                let scale: number = 1 + Math.sin( t * 2 ) * .15\r\n                let translateX: number = -100 + Math.sin( t ) * 150\r\n                let translateY: number = 40 + Math.abs( Math.sin( t ) ) * 100\r\n\r\n                let transform = ``\r\n                transform += `translateX(${translateX}px) translateY(${translateY}px) `\r\n                transform += `skewX(${skewX}deg) skewY(${skewY}deg) `\r\n                transform += `rotateX(${rotateX}deg) rotateY(${rotateY}deg) rotateZ(${rotateZ}deg) ` \r\n                transform += `scaleX(${scale}) scaleY(${scale}) `\r\n                if ( attr_scale )\r\n                    transform += `scaleX(${attr_scale}) scaleY(${attr_scale}) `\r\n                soumah.style.transform = transform\r\n            }\r\n            requestAnimationFrame( animate )\r\n        }\r\n        const tStart = window.performance.now()\r\n        animate()\r\n    }\r\n    avatars = [\r\n        {\r\n            scale: 1, src: ['momo.png', 'merkit.png', 'baretti.png']\r\n        },\r\n        // { scale: .6, src: [ 'https://img.pngio.com/donald-trump-united-states-republican-party-face-mask-bill-donald-trump-face-png-1846_2496.png' ] }\r\n    ]\r\n    render() {\r\n        const { serverState } = this.state\r\n        return <div className='expand' onClick={() => this.onAnyClick()}>\r\n            <div className='backgroundDiv' onClick={() => this.onAnyClick()}>\r\n                <img\r\n                     onClick={() => this.onAnyClick()}\r\n                    className='background'\r\n                    src='wandelsoumah_bg.png'\r\n                />\r\n                <span className='hint'>If music is not playing, click somewhere</span>\r\n                {this.avatars.map((avatar, i) => {\r\n                    const props = { scale: avatar.scale, index: i }\r\n                    return avatar.src.map((url, i2) => <img\r\n                        key={i+'a'+i2}\r\n                        className='soumah'\r\n                        src={url}\r\n                        {...props}\r\n                        onClick={() => this.onAnyClick()}\r\n                ></img>)\r\n                })}\r\n                {this.bgAudioStart && <div className='lyrics-div'>\r\n                    <LyricsComponent\r\n                        lyricsFile='lyrics.json'\r\n                        tStart={this.bgAudioStart}\r\n                    />\r\n                </div>}\r\n            </div>\r\n            {serverState === 'loading' ?\r\n                <Loading/> :\r\n                <div className='main'>\r\n                    {serverState === 'offline' ?\r\n                        <Text>Server is offline... more \"aamuja\" some other time</Text> :\r\n                        this.renderServerOnline()\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    renderServerOnline() {\r\n        const { applicationState } = this.state\r\n        return <div>\r\n            { applicationState && this.renderApplicationState( applicationState ) }\r\n        </div>\r\n    }\r\n    renderApplicationState( applicationState: ApplicationState ) {\r\n        const { unsupportedLanguageCodes } = this.state\r\n        const { inputLanguage, input, results } = applicationState\r\n        // Sort rendered results so that unsupported languages are last.\r\n        const isResultSupported = ( result: Result ): boolean =>\r\n            unsupportedLanguageCodes === undefined ||\r\n            ! unsupportedLanguageCodes.includes( result.language.Code )\r\n        const sortedResults = results.filter( isResultSupported )\r\n            .concat( results.filter( result => ! isResultSupported( result ) ) )\r\n\r\n        return <div className='column'>\r\n            <Title level={3}>Official translations for...</Title>\r\n            <div className='row listStart'>\r\n                <Text className='speechAsText'>\"{input}\"</Text>\r\n            </div>\r\n            {sortedResults.map(( result, i ) =>\r\n                <div className='row' key={i}>\r\n                    <Text>{result.language.Name}:</Text>\r\n                    <Text className='speechAsText'>{result.local}</Text>\r\n                    {isResultSupported( result ) && <SoundOutlined onClick={() => this.playResultSound( result )} />}\r\n                    { inputLanguage === result.language &&\r\n                        <Text>({result.translation})</Text>\r\n                    }\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport \"./styles.css\";\nimport { MainMenu } from './Components/MainMenu/MainMenu'\nimport { LyricsGenerator } from './Components/LyricsGenerator/LyricsGenerator'\n\ninterface Props {}\ninterface State {}\nclass App extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props)\n        this.state = {}\n    }\n    render() {\n        // return <LyricsGenerator\n        //     audioIn='tamouya_gouli.mp3'\n        //     lyricsIn='lyrics-src.txt'\n        // />\n        return <MainMenu/>\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}